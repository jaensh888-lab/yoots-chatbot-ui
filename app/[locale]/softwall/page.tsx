"use client"

import { useRouter } from "next/navigation"
import { useState } from "react"
import dynamic from "next/dynamic"
import { supabase } from "@/supabase/browser-client"

const Turnstile = dynamic(() => import("@marsidev/react-turnstile"), {
  ssr: false
})

export default function SoftwallPage() {
  const router = useRouter()
  const [token, setToken] = useState<string | null>(null)
  const [busy, setBusy] = useState(false)

  const continueAsGuest = async () => {
    // –µ—Å–ª–∏ –≤–∫–ª—é—á–∏–ª Turnstile ‚Äî –ø–æ—Ç—Ä–µ–±—É–µ–º —Ç–æ–∫–µ–Ω
    // –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ —É–±–µ—Ä–∏ —ç—Ç—É –ø—Ä–æ–≤–µ—Ä–∫—É
    // if (!token) return;

    try {
      setBusy(true)

      // –ê–Ω–æ–Ω–∏–º–Ω—ã–π –≤—Ö–æ–¥
      const { data, error } = await supabase.auth.signInAnonymously()
      if (error) throw error

      // –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –¥–æ–º–∞—à–Ω–∏–π –≤–æ—Ä–∫—Å–ø–µ–π—Å
      const userId = data.user?.id!
      const { data: home } = await supabase
        .from("workspaces")
        .select("id")
        .eq("user_id", userId)
        .eq("is_home", true)
        .single()

      let workspaceId = home?.id
      if (!workspaceId) {
        const { data: created, error: createErr } = await supabase
          .from("workspaces")
          .insert({
            user_id: userId,
            name: "My Workspace",
            is_home: true
          })
          .select("id")
          .single()
        if (createErr) throw createErr
        workspaceId = created.id
      }

      router.replace(`/${workspaceId}/chat`)
    } catch (e) {
      console.error(e)
      alert("–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∑–∞–π—Ç–∏ –≥–æ—Å—Ç–µ–º.")
    } finally {
      setBusy(false)
    }
  }

  return (
    <main className="flex min-h-screen flex-col items-center justify-center gap-6 p-6">
      <h1 className="text-3xl font-semibold">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å üëã</h1>
      <p className="text-muted-foreground max-w-[560px] text-center">
        –ú–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–∑–∂–µ –ø–æ–ø—Ä–æ—Å–∏–º —Å–æ–∑–¥–∞—Ç—å
        –∞–∫–∫–∞—É–Ω—Ç, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å.
      </p>

      {/* –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π —ç—Ç–æ—Ç –±–ª–æ–∫, –µ—Å–ª–∏ Turnstile –ø–æ–∫–∞ –Ω–µ –Ω—É–∂–µ–Ω */}
      <div className="w-[300px]">
        <Turnstile
          siteKey={process.env.NEXT_PUBLIC_TURNSTILE_SITE_KEY!}
          onSuccess={t => setToken(t)}
          options={{ theme: "dark" }}
        />
      </div>

      <button
        onClick={continueAsGuest}
        disabled={busy}
        className="rounded-xl bg-blue-600 px-5 py-2.5 text-white hover:bg-blue-500 disabled:opacity-50"
      >
        {busy ? "–í—Ö–æ–¥–∏–º‚Ä¶" : "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–∞–∫ –≥–æ—Å—Ç—å"}
      </button>
    </main>
  )
}
